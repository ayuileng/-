
Java基础
3. Java读取一个文件, 有哪些方法, 考虑性能, 用哪一个类
字节流stream，字符流reader， 读文件的话一般都用字节流，常用的有FileInputStream和用BufferedInputStream装饰的FileInputStream，
读取方式上面也有一次读一个字节数组或者一个字节的，效率方面BufferedInputStream一次读一个数组的效率最高
4. BIO, NIO, AIO区别 //todo
BIO是同步阻塞，发出IO请求之后要等待相应，期间一直阻塞；
NIO采用多路复用
AIO是异步非阻塞的，发送请求之后就去做别的，等IO操作结束后会收到通知来回调
5. NIO的组件, Selector (这个忘记了, 一脸懵逼!)
channel：通道，类似流，NIO的数据操作都是从channel中读写
buffer：缓冲区，用于和channel交互
selector（重要）：（IO多路复用的原理-redis中也通用）
能够检测一到多个NIO通道，并能够知晓通道是否为诸如读写事件做好准备。这样，一个单独的线程可以管理多个channel，从而管理多个网络连接。
仅用单个线程来处理多个Channels的好处是，只需要更少的线程来处理通道。
对于操作系统来说，线程之间上下文切换的开销很大，而且每个线程都要占用系统的一些资源。因此，使用的线程越少越好。
6. 什么是序列化, IO的序列化方式, 为什么需要序列化(包括在网络传输的情况下)
把对象转换为字节序列的过程称为对象的序列化。把字节序列恢复为对象的过程称为对象的反序列化。这样可以存硬盘或者网络上传输
java.io.ObjectOutputStream代表对象输出流，它的writeObject(Object obj)方法可对参数指定的obj对象进行序列化
因为网络上传输只能传二进制，所以要序列化
7. Error和Exception区别
error是程序出错，比如栈溢出，jvm异常  ecxeption分为checked和unchecked
checked是必须要try catch的不是代码的问题，比如fileNotFound  unchecked是代码的问题比如数组越界什么的，也称为RuntimeException
8. RuntimeException和非RuntimeException区别
9. 什么叫线程安全, 保证线程安全的方法
不管多少个线程怎么的顺序去执行，结果都是一致的符合逻辑的。1. 不共享对象 2. 同步机制synchronized 3. final不可变 4. 线程隔离 ThreadLocal
10. 加锁的方式, synchronized作用在方法上和代码块区别
方法也要区分是实例方法还是类方法，代码块的话要指明加锁的对象
11. synchronized(this)和synchronized(Xx.class)区别
前者是对当前对象加锁，后者是对该类进行加锁

Web方面:
12. Spring AOP实现原理
动态代理  jdk+cglib 区别，一个基于接口，一个基于继承，所以CGLib无法代理private方法和final方法
13. 一个页面, 一个提交按钮, 如何防止重复提交, 我说验证码, 还有其它方式吗?
前端js操作
redirect-after-post
session的token验证（当表单页面被请求时，生成token，存在session中，放表单隐藏域。处理表单时，检查是否存在，并session中删除。如表单提交里没有有效的标志串，则提交过了。）
在数据库里添加唯一性约束，重复的输入不能插入
14. ajax实现跨域请求(前端或者后台实现方法)
jsonp
15. cookie和session区别
cookie存储在客户端，session存储在服务端，cookie长度有限制，session基于cookie实现（cookie中带上session 的id 如果是tomcat的话就是JSESSIONID）
16. forward和redirect区别
Forward和Redirect代表了两种请求转发方式：直接转发和间接转发。
Forward 客户端和浏览器只发出一次请求，Servlet、HTML、JSP或其它信息资源，由第二个信息资源响应该请求，在请求对象request中，保存的对象对于每个信息资源是共享的。
Redirect 实际是两次HTTP请求，服务器端在响应第一次请求的时候，让浏览器再向另外一个URL发出请求，从而达到转发的目的。
17. 你建过索引吗? 建索引的原则
最左前缀匹配原则（如果顺序不对的话mysql其实会自动调整顺序）
尽量选择区分度高的列作为索引
索引列不能参与计算
尽量的扩展索引，不要新建索引
范围列可以用到索引（必须是最左前缀），但是范围列后面的列无法用到索引。同时，索引最多用于一个范围列，因此如果查询条件中有两个范围列则无法全用到索引
索引也是有代价的：索引文件本身要消耗存储空间，同时索引会加重插入、删除和修改记录时的负担
表使用自增主键，那么每次插入新的记录，记录就会顺序添加到当前索引节点的后续位置，当一页写满，就会自动开辟一个新的页
18. 索引的类型, 如主键索引
围绕：innodb（聚集  非聚集  自适应hash  全文）
19. 查看SQL执行计划
explain
20. 有十万条数据, 写SQL语句查询其中某字段较大值的几条数据
order by limit
21. 子查询与关联查询的区别
表关联的效率要高于子查询，因为子查询走的是笛卡尔积
表关联可能有多条记录，子查询只有一条记录，如果需要唯一的列，最好走子查询

JVM
22. 你用过的JVM命令有哪些
jstack
jstat
23. 如果一个程序发生OOM, 该怎么处理
加堆的大小 看是哪个区域发生的OOM
24. Java 类加载机制
双亲委派，三个加载器，上下级关系
25. 为什么使用双亲委派模型
保证类加载的优先级关系，比如Object类永远是Bootstrap加载器加载的，不会乱
25. 如何打破双亲委派模型
继承ClassLoader类，重写loadClass和findClass方法（注：重写findClass是自定义类加载器但是不打破双亲委派的方式）
26. JVM内存模型

27. JDK7与JDK8的JVM内存模型区别
方法代移除，改为元数据区，本质上还是方法区的实现，只不过不在堆上，而是使用的本地内存

网络:
28. HTTP1.0与HTTP1.1区别
keep-alive 默认长连接
29. TCP与UDP区别
基于连接与无连接；
TCP面向字节流，实际上是TCP把数据看成一连串无结构的字节流，UDP是面向报文的；
TCP保证数据正确性，UDP可能丢包，TCP保证数据顺序，UDP不保证；每一条TCP连接只能是点到点的;
UDP支持一对一，一对多，多对一和多对多的交互通信；
TCP首部开销20字节;UDP的首部开销小，只有8个字节；
TCP的逻辑通信信道是全双工的可靠信道，UDP则是不可靠信道
----------------------------------------------------------------------
1.逻辑题；
100的阶乘末尾有几个0
N的阶乘末尾有几个0的解法：1到N之间有多少5的倍数，有多少25的倍数，125的倍数等等。。
2.list set map 底层使用什么实现的有哪些典型实现
ArrayList数组，LinkedList链表，HashSet散列表，TreeSet红黑树，HashMap散列表，TreeMap红黑树。
3.hashmap五个线程~同时put值会发生什么后果
线程不安全
rehash的时候容易链表成环导致CPU占用率100%
4.hashmap扩容是怎么扩容的，为什么是2的幂
采用这种非常规设计，主要是为了在取模和扩容时做优化，同时为了减少冲突，HashMap定位哈希桶索引位置时，也加入了高位参与运算的过程
h & (table.length -1)，当length总是2的n次方时，h& (length-1)运算等价于对length取模，也就是h%length，但是&比%具有更高的效率
5.concurrenthashmap为什么线程安全，采用了什么措施应对高并发
6.线程池的参数有什么意义
corePoolSize，maxPoolSize，keepAliveTime，TimeUnit，BlockingQueue，rejectedExecutionHandler
7.定长队列5，最高线程6个，核心3个，100个任务同时请求，怎么处理的
8.情景题:按钮点一下后台生成订单，当用户疯狂点的时候怎么正常生成订单
参考上面有一题的回答
9.分布式框架了解吗，nginx了解吗。dubbo了解吗，docker了解吗，数据库了解吗。。（自己简历写的坑）自己作死
10.反射能得到方法的参数名吗。int age中的age。为什么得不到
1.8之前不能，因为编译成字节码之后只保留类型，名称是没有的，1.8之后可以

1、聊一聊你对线程同步的理解。
synchronized lock wait/notify
2、ReentrantLock和synchronized的区别，了解synchronized的实现原理吗？
层次不一样  ReentrantLock有多个条件，超时，中断锁，必须显式释放
同步代码块是使用monitorenter和monitorexit指令实现的，同步方法依靠的是方法修饰符上的ACC_SYNCHRONIZED实现。 
同步代码块：monitorenter指令插入到同步代码块的开始位置，monitorexit指令插入到同步代码块的结束位置，JVM需要保证每一个monitorenter都有一个monitorexit与之相对应。
任何对象都有一个monitor与之相关联，当且一个monitor被持有之后，他将处于锁定状态。线程执行到monitorenter指令时，将会尝试获取对象所对应的monitor所有权，即尝试获取对象的锁； 
synchronized用的锁是存在Java对象头里的
3、用过CountDownLatch么？什么场景下用的？
4、聊一聊JVM，程序计数器有什么用？
当前线程正在执行的字节码的行号指示器，也就是当前线程正在执行的那一条字节码指令的地址。
作用：实现代码的流程控制；用于记录当前线程执行的位置，从而当线程被切换回来的时候能够知道该线程上次运行到哪儿了
5、AOP编程的常用实现方式。cglib了解么？
cglib改字节码，基于继承
6、Spring源码看过么？聊一聊你印象最深的地方。
7、谈谈你对分表的看法。
垂直分表是按照列进行的，某个表中的字段比较多，可以新建立一张“扩展表”，将不经常使用或者长度较大的字段拆分出去放到“扩展表”中。
水平分表也称为横向分表，就是将表中不同的数据行按照一定规律分布到不同的数据库表。最常见的方式就是通过主键或者时间等字段进行Hash和取模后拆分
8、谈谈nginx的负载均衡的原理。


1 平时用过哪些集合？（重点说了下Hashmap）

2 刚说到Hashmap非线程安全，为什么？（扩容会有环）

3 （前面有主动提到HashTable和ConcurrentHashmap）这两者有什么区别？分段锁的具体细节？

4 （回答Hashmap的时候有提到j8里面用红黑树优化）红黑树原理？

5 （ConcurrentHashmap有提到j8乐观锁优化）乐观锁原理？（结合项目场景）

6  NIO用过吗？说下和BIO的区别？

2面

3 （简历）说下Java的类加载机制？
加载 解析 验证 准备 初始化 使用 卸载
4 哪些情况下会触发类加载？

5 JVM模块？堆的分代？
PC、虚拟机栈、本地方法栈、堆、方法区、运行时常量池。
堆分为新生代和老年代，新生代分为两个survivor和一个eden，比例为1:1:8，jdk1.7之前dehumidifier方法区也在堆中实现（hotspot的做法）
6 说下Java里面的锁？
synchronized；Lock接口的实现类；cas无锁
7 问了下设计模式（具体哪种不太记得）

8 线程池？简单写个连接池？


3面（这面印象比较深，问的稍微深一点）
1 Spring事务了解吗？说下你知道的

2 什么情况下用编程式事务？什么时候用声明式事务？

3 事务的隔离级别？传播级别？在什么场景下用？
Read Uncommitted, Read commited, Repeatable read, Serializable

4 AOP用过吗？大致说下
切注解实现日志等功能
5 AspectJ和Spring的AOP有哪些区别？

6 SpringMVC处理请求的流程？

7 用过RPC框架吗？说说你对RPC的理解

10 mybatis的延迟加载知道吗？怎么写？批处理怎么写？动态sql？（顺序可能有点乱，记得不是很清楚）

11 mybatis的占位符？怎么防止sql注入？（算常识了）
mybatis中如果以${}形式声明为SQL传递参数，mybatis将不会进行参数预处理，会直接动态拼接SQL语句，此时就会存在被注入的风险
所以在使用mybatis作为持久框架时应尽量避免采用${}的形式进行参数传递，如果无法避免（有些SQL如like、in、order by等，程序员可能依旧会选择${}的方式传参）
12 redis的相关的一些问题


1.项目balabala，项目问的很细很细
2.redis的持久化方式，redis3.0原生集群和redis读写分离+哨兵机制区别
3.工厂模式和抽象工厂模式区别
4.hashmap底层
5.分布式架构简单介绍
6.分布式架构会带来哪些问题
7.快排，归并排序原理
8.jvm垃圾回收算法和原理
9.对象进入老年代的几种方式
10.代表个人最高水平的一个技术点（好像是这个意思，应该是针对某个项目而言吧）
11.redis持久化方式

redis原子性

a操作成功，发mq通知b b失败了怎么办

hashMap有序吗，什么Map有序  怎么实现的

自定义String，不影响JDK的String

怎么打破双亲委派模型

幻读以及MVCC
2.1000个列，列的值非0即1，求每一行值大于300的数据行，全部select出来
3.进程中断
4.进程饥饿
5.动态规划原理以及和分治法区别
都是大问题划分为小问题，分治法是子问题之间独立
6.二叉树深度求解
7.spring MVC，spring AOP源码
8.spring循环引用检测
9.spring事务传播机制
10.可重用锁
11.double check介绍
12.java nio，bio，aio，操作系统底层nio实现原理


1、个人介绍加项目介绍20分钟
2、微服务架构是什么，它的优缺点？
3、ACID CAP BASE理论
4、分布式一致性协议，二段、三段、TCC，优缺点
5、RPC过程
6、服务注册中心宕机了怎么办？
7、微服务还有其他什么组件
8、分布式架构与微服务的关系
9、你有什么问题要问我的。

蚂蚁金服二面 昨天晚上9点半打来电话。 时间1小时20分钟
什么都问，都是很基础的东西，诶，感觉基础不扎实。。感觉和这位同学是一个面试官。有几个问题是一样的。@java讨饭员
上来不用自我介绍，项目介绍，直接开始

算法来两道
1、各种排序算法、未排序常规数据查找第K大的数，时间复杂度。
2、二叉树的深度

操作系统来两道
3、虚拟内存分页了解不？
4、进程和线程区别

数据库来三道
5、第一二三范式是什么？
6、一个表一千个列值为true和false，写sql 查询 有300个列值为true的行。
7、脏读和不可重复读和幻读是什么？
脏读：事务中读取了别的事务还未提交的数据
不可重复读：同一个事务中两次读取相同的数据不一致，原因是别的事务的修改
幻读：读到了别的事务新增的数据，同一事务中两次读取数据发现出现新行了
JVM
7、什么对象会从新生代晋升到老年代
大对象 超过-XX:PretenureSizeThreshold的对象直接进老年代
GC年龄超过15或者动态年龄判定的晋升老年代
分配担保时会暂时进老年代

多线程
8、一个任务分成十个任务，最后汇总计算，不能用fork/join
使用CountDownLatch，初始值设定10，每个runnable完成前countdown，汇总的线程直到count到0才能执行，保证10个任务都完成了


13、对安全方面了解多少？
14、 安全协议有哪些 、https是啥？


2:  HashMap怎么解决Hash冲突的
拉链法
3:  ConcurrentHashMap怎么解决线程安全
4:  常见的排序有没有了解过
5:  一堆基本有序的数组，用哪种排序效率最高
插入
6:  JDK1.6到JDK1.8 GC上面最大做了什么变化
1.7加了G1 1.8移出永久代，方法区改为由本地内存的元数据区实现
7:  CMS怎么进行垃圾收集的
4阶段，1,3阶段STW
8:  G1怎么进行垃圾收集的
9:  G1相比于CMS有哪些优势
10: 哪些情况会导致Full GC

11: 新new的对象放在哪里
12: 哪些东西放在栈区
方法运行的模型，每个方法对应一个栈帧，里面保存着局部变量，操作数栈，动态链接，方法返回地址等
14: wait和sleep有什么区别
wait会释放当前锁，sleep不会
15: 线程池几个参数
16: 怎么评估线程数大小 
17: 几个线程访问同一个东西，怎么保证安全
18: Spring几个特点说下
19: CGLib有没有了解过
20: Spring支持哪几种切片
21: SpringBoot和Spring有什么区别
22: SpringBoot和Spring启动有什么区别
23: Spring启动生命周期 
24: Spring注解@Resource和@Autowired区别对比  => 优先级不一样
25: spring @service @controller @componet 三者区别
26: Http和Https协议有什么区别，证书了解不
27: 介绍下Redis设计实现
28: Redis的细节源码看过没有
29: Redis分布式缓存
30: 线程在频繁的Full GC 怎么排查
31: JVM一些工具，jps, jmap
32: 你有啥问题
   
 二面(2018/7/19 晚上九点 40分钟左右):
1:  自我介绍
2:  实习做什么
3:  你对哪个语言最熟悉
4:  Java的内存模型
5:  垃圾回收的原理
8:  两个有序的数组，合成一个有序的数组，怎么合并效率高 
9:  淘宝的登陆页面，怎么保证他安全
10:  你有最新半年用户的订单，每天的用户订单量有上亿，预测下未来一周哪些商品最容易被购买



2.redis的consistent hash算法
一致性hash
3.consistent hash算法怎么实现均衡性
虚拟节点
4.为什么能保证均衡性
同3
5.java中线程如何交互
wait notify notifyall
6.volatile关键字的底层实现，volatile是不是原子性的
内存屏障
在每个volatile写操作的前面插入一个StoreStore屏障
在每个volatile写操作的后面插入一个SotreLoad屏障
在每个volatile读操作的后面插入一个LoadLoad屏障
在每个volatile读操作的后面插入一个LoadStore屏障
7.除了volatile,java还有什么地方用到了内存屏障
不是原子性的
synchronized也能保证可见性，所以也用到了内存屏障
8.java中的锁机制
悲观锁：synchronized+Lock，乐观锁：cas操作
9.悲观锁和乐观锁，应用中的案例，mysql当中怎么实现，java中的实现
mysql悲观锁：表锁，行锁，意向锁；mysql乐观锁：用version，每次都比较version是不是预期
java悲观锁：synchronized或Lock；java乐观锁：cas操作
10.spring aop怎么实现
jdk或CGlib
11.除了jdk和cglib还能怎么实现

12.jdk动态代理和cglib区别
基于接口和基于类
13.cglib的底层实现
继承机制，修改字节码
14.spring事务底层实现原理
aop
16.代理模式和外观模式的区别

17.装饰模式和代理模式的区别

18.http2.0和1.1和1.0的区别
HTTP 1.0需要使用keep-alive参数来告知服务器端要建立一个长连接，而HTTP1.1默认支持长连接；HTTP1.0是没有host域的，HTTP1.1才支持这个参数。
HTTP2.0使用了多路复用的技术，做到同一个连接并发处理多个请求，而且并发请求的数量比HTTP1.1大了好几个数量级。
19长连接和短连接

20.tcp为什么三次握手却要四次分手

21.算法：有序数组去重(10分钟手写，拍照发送)


5， Synchronize关键字为什么jdk1.5后效率提高了
进行了优化，比如自旋，锁粗化等
6， 线程池的使用时的注意事项
？？？
7， Spring中autowire和resourse关键字的区别
@Autowire默认按照类型装配，可以结合@Qualifier注解一起使用; 
@Resource默认按照名称装配，当找不到与名称匹配的bean才会按照类型装配，可以通过name属性指定，默认取属性名作为bean名称寻找依赖对象. 
8， Hashmap的原理
桶数组，拉链法，hashcode定位到桶，equals在链中遍历，链长大于8转为红黑树
9， Hashmap的大小为什么指定为2的幂次

10， 讲一下线程状态转移图
new runnable blocked wait timed_wait terminated
11， 消息队列了解么

12， 分布式了解么



1）java虚拟机内存模型
2）内存溢出一般发生在哪个区？永久代会不会导致内存溢出？
一般发生在堆；jdk7之前在堆上实现永久代，8之后在元数据区，用的世界内存
3）动态加载类的框架了解哪些？
tomcat会动态加载类，有一个commonClassLoader，加载CATALINA_HOME/lib，还有微博application加载器，单独加载每个webapp的类，比如WEB-INF/classes和WEB-INF/lib下的类
4）动态代理一般有哪几种实现方式？动态代理的应用场景有哪些？
jdk cglib。很多需要扩展类功能的场景，比如aop，rpc等
5）栈会不会溢出？栈溢出一般抛什么异常？jvm在哪里设置栈的大小？设置的参数是什么？
会，会跑StackOverflowError和OutOfMemoryError。-Xss 默认是1M
6）用过哪些命令查看jvm的状态、堆栈信息？
jstack jstat
7）jvm的垃圾回收机制？
8）java类加载机制？如何实现自定义类加载器？findClass与loadClass的区别？
3个层次，双亲委派。
继承ClassLoader类，然后重写findClass方法。
重写findClass是自定义类加载器但是不打破双亲委派的方式
loadClass中实现了双亲委派机制，重写的话会打破双亲委派模型。
9）String、StringBuffer、StringBuilder的区别？对应的使用场景？
10）如何实现不可变的类？
    将类声明为final，所以它不能被继承
    将所有的成员声明为私有的，这样就不允许直接访问这些成员，且没有setter
    将所有可变的成员声明为final，这样只能对它们赋值一次
    通过构造器初始化所有成员，进行深拷贝(deep copy)
    在getter方法中，不要直接返回对象本身，而是克隆对象，并返回对象的拷贝
11）浅复制和深复制？怎样实现深复制？
重写clone方法+序列化 两种方法
12）HashMap、HashTable、ConcurrentHashMap的区别？
13）CAS是一种什么样的同步机制？
14）NIO的原理，包括哪几个组件？
15）简单介绍一下java的反射机制？反射在哪些地方有应用场景？
16）spring加载bean的流程？
17）java线程池？线程池构造函数的几个参数含义？keepAliveTime解释一下？
即超过corePoolSize的线程执行完任务后会存活的时间，超过时间就销毁了不存在了。
18）一个接口，要去调用另外5个接口，每一个接口都会返回数据给这个调用接口，调用接口要对数据进行合并并返回给上层。
    这样一种场景可能用到并发包下的哪些类？你会怎么去实现这样的业务场景？
19）CountDownLatch和CyclicBarrier的区别？
CyclicBarrier能重复使用
20）线程加锁有哪些方式？synchronized和lock的区别？
21）volatile关键字的作用？为什么使用AtomicLong而不使用Long?AtomicLong的底层是怎么实现的？
24）springmvc处理请求的流程？
25）spring的事务怎么使用？事务回滚？自定义异常？
27）tcp四次挥手的过程？TIME_WAIT为什么至少设置两倍的MSL时间？
30）了解哪些开源的中间件？缓存？消息？分布式框架？

2 缓存是怎么使用的，里面存哪些东西，为什么要存这些东西，哪些高并发场景不能使用缓存；
读多写少的场景可以存放一些热点数据。可以减轻数据库的访问压力。需要强一致性的场景一般都不能用缓存。
3 公司数据量多大，并发量多高要用互斥锁解决缓存穿透；
5 http报文头部是什么，为什么要有版本号，1.0，1.1，2.0的区别，2.0中的多路复用怎么实现会话的串行传输；
6 自己设计一个数据库连接池怎么设计；
7 线程池说一说；
8 阻塞队列不用java提供的自己怎么实现，condition和wait不能用；
 方案一，wait+notify
 方案二，ReentrantLock的await和signal，可以实现两个条件
9 拥塞窗口讲一讲，为什么要用慢启动算法；
10 jvm垃圾回收；
11 如果频繁老年代回收怎么分析解决；
是不是大对象？是不是晋升频繁？是不是minorGC频繁然后存活对象过多导致分配担保总是失败
12 CPU使用率100%怎么分析解决；
13 数据库索引原理；
B+树
14 怎么用原生的JDBC访问数据库；
class.ForName得到driver，Connection PreparedStatement ResultSet等流程
15 算法 n个数找最小的k个数；
最大堆
17 liunx命令平时用的哪些，查看机器使用情况用哪个；